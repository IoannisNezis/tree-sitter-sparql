=====
Iris
=====

SELECT * {}

VALUES ?var {
  <http://example.org/foo>
  <foo>
  example:foo
}

---

(unit
  (Query
  (SelectQuery
    (SelectClause)
    (WhereClause
      (GroupGraphPattern)))
  (ValuesClause
    (DataBlock
      (VAR)
      (IRIREF)
      (IRIREF)
      (PrefixedName
        (PNAME_NS (PN_PREFIX))
        (PN_LOCAL))))))

=========
Literals
=========

SELECT * {}

VALUES ?var {
  '#foo'
  'foo'
  "foo"
  'foo'@de
  'foo'^^<http://example.org/foo>
  '''foo"bar'foo'"'''
  false
  'false'^^xsd:boolean
  1.1
  -1.1
  1.0e6
  '1.3'^^xsd:DECIMAL
}

---

(unit
  (Query
  (SelectQuery
    (SelectClause)
    (WhereClause
      (GroupGraphPattern)))
  (ValuesClause
    (DataBlock
      (VAR)
      (RdfLiteral (String (STRING_LITERAL)))
      (RdfLiteral (String (STRING_LITERAL)))
      (RdfLiteral (String (STRING_LITERAL)))
      (RdfLiteral (String (STRING_LITERAL)) (LANGTAG))
      (RdfLiteral (String (STRING_LITERAL)) (IRIREF))
      (RdfLiteral (String (STRING_LITERAL_LONG)))
      (boolean_literal)
      (RdfLiteral (String (STRING_LITERAL))
      (PrefixedName (PNAME_NS (PN_PREFIX)) (PN_LOCAL)))
      (DECIMAL)
      (DECIMAL)
      (DOUBLE)
      (RdfLiteral
        (String (STRING_LITERAL))
        (PrefixedName (PNAME_NS (PN_PREFIX)) (PN_LOCAL)))))))

=======================
String escape sequence
=======================

SELECT * {}

VALUES ?var {
  "fo\t\\foo\bbo"
}

---

(unit (Query (SelectQuery
  (SelectClause)
  (WhereClause (GroupGraphPattern)))
  (ValuesClause (DataBlock
    (VAR)
    (RdfLiteral
      (String (STRING_LITERAL)))))))

================
Query variables
================

SELECT $foo ?bar {}

---

(unit
  (Query
  (SelectQuery
    (SelectClause (VAR) (VAR))
    (WhereClause (GroupGraphPattern)))))

============
Blank nodes
============

SELECT * {
  [ :p "v" ] .
  [] :p "v" .
  :s :q [ :p "v" ] .
  _:s.9._.a ?s ?p
}

---

(unit
  (Query
  (SelectQuery
    (SelectClause)
    (WhereClause
      (GroupGraphPattern
        (GroupGraphPatternSub
          (TriplesBlock
            (TriplesSameSubjectPath
              (BlankNodePropertyListPath
                (PropertyListPathNotEmpty
                  (Path
                    (PathSequence
                      (PathEltOrInverse
                        (PathElt
                          (PathPrimary
                            (PrefixedName
                              (PNAME_NS)
                              (PN_LOCAL)))))))
                  (ObjectList
                    (RdfLiteral
                      (String
                        (STRING_LITERAL)))))))
            (TriplesSameSubjectPath
              (ANON)
              (PropertyListPathNotEmpty
                (Path
                  (PathSequence
                    (PathEltOrInverse
                      (PathElt
                        (PathPrimary
                          (PrefixedName
                            (PNAME_NS)
                            (PN_LOCAL)))))))
                (ObjectList
                  (RdfLiteral
                    (String
                      (STRING_LITERAL))))))
            (TriplesSameSubjectPath
              (PrefixedName
                (PNAME_NS)
                (PN_LOCAL))
              (PropertyListPathNotEmpty
                (Path
                  (PathSequence
                    (PathEltOrInverse
                      (PathElt
                        (PathPrimary
                          (PrefixedName
                            (PNAME_NS)
                            (PN_LOCAL)))))))
                (ObjectList
                  (BlankNodePropertyListPath
                    (PropertyListPathNotEmpty
                      (Path
                        (PathSequence
                          (PathEltOrInverse
                            (PathElt
                              (PathPrimary
                                (PrefixedName
                                  (PNAME_NS)
                                  (PN_LOCAL)))))))
                      (ObjectList
                        (RdfLiteral
                          (String
                            (STRING_LITERAL)))))))))
            (TriplesSameSubjectPath
              (BLANK_NODE_LABEL)
              (PropertyListPathNotEmpty
                (VAR)
                (ObjectList
                  (VAR)))))))))))

====
Nil
====

SELECT * {}

VALUES () {
  ()
}

---

(unit
  (Query
  (SelectQuery
    (SelectClause)
    (WhereClause (GroupGraphPattern)))
    (ValuesClause
      (DataBlock
        (NIL)
        (NIL)))))
